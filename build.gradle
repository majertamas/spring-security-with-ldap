plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.10'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'hu.mikrum'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def uiDir = "$projectDir/src/main/ui"

task buildAngular(type:Exec) {
    group = BasePlugin.BUILD_GROUP
    dependsOn "cleanAngular"
    onlyIf { !project.hasProperty('ngSkip') }

    workingDir "$uiDir"
    inputs.dir "$uiDir"

    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "ng.cmd", "build", "--output-path=../../../dist", "--base-href=/ui"  //, "--deploy-url=/${rootProject.name}/ngjs/" , "--base-href=/${rootProject.name}/ui"
    } else {
        commandLine "ng", "build", "--output-path=../../../dist", "--base-href=/ui" //, "--deploy-url=/${rootProject.name}/ngjs/" , "--base-href=/${rootProject.name}/ui"
    }
}



task installAngular(type:Exec) {
    group = BasePlugin.BUILD_GROUP
    onlyIf { !project.hasProperty('ngSkip') }

    workingDir "$uiDir"
    inputs.dir "$uiDir"

    if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
        commandLine "npm.cmd", "install"
    } else {
        commandLine "npm", "install"
    }
}

task cleanAngular(type: Delete) {
    dependsOn "installAngular"
    delete files("${rootDir}/src/main/resources/ui/*")
}


processResources {
    dependsOn "buildAngular"
    doFirst {
        copy {
            from "${rootDir}/dist"
            into "${rootDir}/src/main/resources/ui"
        }
    }
}

bootJar {
    dependsOn test
    mainClass = 'hu.mikrum.demo.SpringSecurityWithLdapApplication.java'
    archiveName = "${project.name}"+'.jar'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.ldap:spring-ldap-core")
    implementation("org.springframework.security:spring-security-ldap")
    implementation("com.unboundid:unboundid-ldapsdk")
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}
